/**
* annotate the following function so that a 
* layperson can understand what each line
* accomplishes
**/
function doSomething(str){
	var dataArray = [];
	if(str !== undefined && typeof(str) == 'string'){
		var compileString = str.split(' '),
		    compileStringLen = compileString.length;
		for(var i=0;i<compileStringLen;i++){
			dataArray.push(compileString[i]);
		}
		dataArray.sort();
		return dataArray;
	}
}
doSomething('what will this thing do');

/**
* build a function that will return
* either all the data or a specific
* entry based on the function
* parameters
**/

function getSomeData() {
    dataBlock = [
	{
	"name": {
            "first": "My First Name",
            "last": {
		   "usual":"My given Name",
		   "maiden":"My maiden Name"
		}
        },
        "address": {
            "street": "My Street",
            "city": "My City",
            "zip": "L154W4"
        }
    },{
        "name": {
            "first": "Another Person's First Name",
            "last": {
		   "usual":"Another Person's given Name",
		   "maiden":"Another Person's maiden Name"
		}
        },
        "address": null
    }];

console.log(dataBlock)
}

/**
* convert the following CSS in to SCSS 
* or SASS format. Use variables or mixins
* as you see fit
**/

@media screen and (min-device-width: 320px) and (max-device-width: 640px){
	.item.subItem div > *{
		display:inline-flex;
	}
}
@media screen and (min-device-width: 641px){
	.item.subItem div > *{
		display:inline-block;
	}
}
.item.subItem div a,.item.subItem div a{
	transition:all 0.5s;
	text-decoration:underline;
	background:#fff;
	color:#000;
	padding:10px 0 20px 10px;
}
.item.subItem div a:not(:last-child),.item.subItem div a:not(:last-child){
	border-bottom:3px solid #333;
}
.item.subItem div a:hover,.item.subItem div a:active{
	text-decoration:underline;
	background:#000;
	color:#fff;
	padding:20px 10px 20px 0;
	border-bottom:5px solid #999;
	box-shadow: 1px 1px 20px 50px rgba(0,0,0,0.5);
}
.item.subItem div a:hover:before,.item.subItem div a:active:before{
	content:"click me >"
}

/**
* simplify the following jquery code by chaining
* or using built in functions
**/

$(document).ready(function(){
	$('.container .logo').animate({left: "200px"}, 1000);
	$('.container .logo').animate({opacity: 0.5}, 1000);
	$('.container .logo').clone().appendTo('body').css('background','#EFEFEF');
});

/** 
* what's the difference between the
* following event handlers and where
* or in what circumstance would you 
* use them (or not) 
**/
$('body').on('click','.someThing',function(){.....});
$('body').delegate('.someThing','click',function() {.....});
$('.someThing').bind('click', function() {.....});
$('.someThing').one('click', function() {.....});
$('body').live({click: function (){.....}}, '.someThing');
$('.someThing').click(function(){.....});
